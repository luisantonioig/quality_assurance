>>> print "I'm Python. Nice to eet you!"
I'm Python. Nice to eet you!
>>> input_string_var = raw_input(
...     "Enter some data: ")
Enter some data: input
>>> input_string_var
'input'
>>> some_var = 5
>>> some_var
5
>>> some_other_var
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'some_other_var' is not defined
>>> "yahoo!" if 3 > 2 else 2
'yahoo!'
>>> li = []
>>> other_li = [4, 5, 6]
>>> li.append(1)
>>> li.append(2)
>>> li.append(4)
>>> li.append(3)
>>> li.pop()
3
>>> li.append(3)
>>> li
[1, 2, 4, 3]
>>> li[0]
1
>>> li[0] = 42
>>> li[0]
42
>>> li[0] = 1
>>> li[]
  File "<stdin>", line 1
    li[]
       ^
SyntaxError: invalid syntax
>>> li[0]
1
>>> li[-1]
3
>>> li[4]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
IndexError: list index out of range
>>> li[1:3]
[2, 4]
>>> li[2:]
[4, 3]
>>> li[:3]
[1, 2, 4]
>>> li[::2]
[1, 4]
>>> li[::-1]
[3, 4, 2, 1]
>>> del li[2]
>>> li
[1, 2, 3]
>>> li + other_li
[1, 2, 3, 4, 5, 6]
>>> li.extend(other_li)
>>> li
[1, 2, 3, 4, 5, 6]
>>> li.remove(2)
>>> li
[1, 3, 4, 5, 6]
>>> li.remove(2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: list.remove(x): x not in list
>>> li.insert(1, 2)
>>> li
[1, 2, 3, 4, 5, 6]
>>> li.index(2)
1
>>> li.index(7)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: 7 is not in list
>>> 1 in li
True
>>> len(li)
6
>>> tup = (1, 2, 3)
>>> tup(0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'tuple' object is not callable
>>> tup
(1, 2, 3)
>>> tup[0]
1
>>> tup[0] = 3
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'tuple' object does not support item assignment
>>> len(tup)
3
>>> tup + (4, 5, 6)
(1, 2, 3, 4, 5, 6)
>>> tup[:2]
(1, 2)
>>> 2 in tup
True
>>> a, b, c = (1, 2, 3)
>>> a
1
>>> b
2
>>> c
3
>>> d, e, f = 4, 5, 6
>>> d
4
>>> e
5
>>> f
6
>>> g = 4, 5, 6
>>> g
(4, 5, 6)
>>> e, d = d, e
>>> e
4
>>> 
>>> d
5
>>> empty_dict = {}
>>> filled_dict = {"one": 2, "two": 2, "three": 3}
>>> filled_dict["one"]
2
>>> filled_dict = {"one": 1, "two": 2, "three": 3}
>>> filled_dict["one"]
1
>>> filled_dict.keys()
['three', 'two', 'one']
>>> filled_dict.values()
[3, 2, 1]
>>> filled_dict.items()
[('three', 3), ('two', 2), ('one', 1)]
>>> "one" in filled_dict
True
>>> 1 in filled_dict
False
>>> filled_dict["four"]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
KeyError: 'four'
>>> filled_dict("one")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'dict' object is not callable
>>> filled_dict.get("one")
1
>>> filled_dict.get("four")
>>> filled_dict.get("four", 4)
4
>>> filled_dict.get("one", 4)
1
>>> filled_dict["four"] = 4
>>> filled_dict["four"]
4
>>> filled_dict.setdefault("five", 5)
5
>>> filled_dict.setdefault("five", 6)
5
>>> empty_set = set()
>>> some_set = set([1, 2, 2, 3, 4])
>>> some_set
set([1, 2, 3, 4])
>>> another_set = set([4, 3, 2, 2, 1])
>>> another_set
set([1, 2, 3, 4])
>>> filled_set = {1, 2, 2, 3, 4}
>>> filled_set
set([1, 2, 3, 4])
>>> filled_set.add(5)
>>> filled_set
set([1, 2, 3, 4, 5])
>>> other_set = {3, 4, 5, 6}
>>> filled_set & other_set
set([3, 4, 5])
>>> filled_set | other_set
set([1, 2, 3, 4, 5, 6])
>>> {1, 2, 3, 4} - {2, 3, 5}
set([1, 4])
>>> {1, 2, 3, 4} ^ {2, 3, 5}
set([1, 4, 5])
>>> {1, 2} >= {1, 2, 3}
False
>>> {1, 2} <= {1, 2, 3}
True
>>> 2 in filled_set
True
>>> 10 in filled_set 
False